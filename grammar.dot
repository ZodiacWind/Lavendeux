digraph Automaton {
  0 [label="0\n$accept -> . expression \"end of expression\""]
  0 -> 1 [style=solid label="IDENTIFIER"]
  0 -> 2 [style=solid label="HEX"]
  0 -> 3 [style=solid label="BIN"]
  0 -> 4 [style=solid label="OCT"]
  0 -> 5 [style=solid label="SCI"]
  0 -> 6 [style=solid label="FLOAT"]
  0 -> 7 [style=solid label="INT"]
  0 -> 8 [style=solid label="LPAREN"]
  0 -> 9 [style=solid label="NOT"]
  0 -> 10 [style=dashed label="expression"]
  0 -> 11 [style=dashed label="atomic_value"]
  0 -> 12 [style=dashed label="constant_expression"]
  0 -> 13 [style=dashed label="left_opside_funct_expression"]
  0 -> 14 [style=dashed label="assignment_expression"]
  1 [label="1\natomic_value -> IDENTIFIER .\nconstant_expression -> IDENTIFIER . LPAREN RPAREN\nconstant_expression -> IDENTIFIER . LPAREN constant_expression RPAREN\nconstant_expression -> IDENTIFIER . LPAREN expression_list RPAREN\nleft_opside_funct_expression -> IDENTIFIER . LPAREN RPAREN EQUAL\nleft_opside_funct_expression -> IDENTIFIER . LPAREN IDENTIFIER RPAREN EQUAL\nleft_opside_funct_expression -> IDENTIFIER . LPAREN identifier_list RPAREN EQUAL\nassignment_expression -> IDENTIFIER . EQUAL constant_expression"]
  1 -> 15 [style=solid label="EQUAL"]
  1 -> 16 [style=solid label="LPAREN"]
  2 [label="2\natomic_value -> HEX ."]
  3 [label="3\natomic_value -> BIN ."]
  4 [label="4\natomic_value -> OCT ."]
  5 [label="5\natomic_value -> SCI ."]
  6 [label="6\natomic_value -> FLOAT ."]
  7 [label="7\natomic_value -> INT ."]
  8 [label="8\nconstant_expression -> LPAREN . constant_expression RPAREN"]
  8 -> 17 [style=solid label="IDENTIFIER"]
  8 -> 2 [style=solid label="HEX"]
  8 -> 3 [style=solid label="BIN"]
  8 -> 4 [style=solid label="OCT"]
  8 -> 5 [style=solid label="SCI"]
  8 -> 6 [style=solid label="FLOAT"]
  8 -> 7 [style=solid label="INT"]
  8 -> 8 [style=solid label="LPAREN"]
  8 -> 9 [style=solid label="NOT"]
  8 -> 11 [style=dashed label="atomic_value"]
  8 -> 18 [style=dashed label="constant_expression"]
  9 [label="9\nconstant_expression -> NOT . constant_expression"]
  9 -> 17 [style=solid label="IDENTIFIER"]
  9 -> 2 [style=solid label="HEX"]
  9 -> 3 [style=solid label="BIN"]
  9 -> 4 [style=solid label="OCT"]
  9 -> 5 [style=solid label="SCI"]
  9 -> 6 [style=solid label="FLOAT"]
  9 -> 7 [style=solid label="INT"]
  9 -> 8 [style=solid label="LPAREN"]
  9 -> 9 [style=solid label="NOT"]
  9 -> 11 [style=dashed label="atomic_value"]
  9 -> 19 [style=dashed label="constant_expression"]
  10 [label="10\n$accept -> expression . \"end of expression\"\nexpression -> expression . DECORATOR IDENTIFIER"]
  10 -> 20 [style=solid label="\"end of expression\""]
  10 -> 21 [style=solid label="DECORATOR"]
  11 [label="11\nconstant_expression -> atomic_value ."]
  12 [label="12\nexpression -> constant_expression .\nconstant_expression -> constant_expression . OR constant_expression\nconstant_expression -> constant_expression . XOR constant_expression\nconstant_expression -> constant_expression . AND constant_expression\nconstant_expression -> constant_expression . LSHIFT constant_expression\nconstant_expression -> constant_expression . RSHIFT constant_expression\nconstant_expression -> constant_expression . PLUS constant_expression\nconstant_expression -> constant_expression . MINUS constant_expression\nconstant_expression -> constant_expression . MUL constant_expression\nconstant_expression -> constant_expression . DIV constant_expression\nconstant_expression -> constant_expression . MOD constant_expression\nconstant_expression -> constant_expression . POW constant_expression\nconstant_expression -> constant_expression . FACTORIAL"]
  12 -> 22 [style=solid label="OR"]
  12 -> 23 [style=solid label="XOR"]
  12 -> 24 [style=solid label="AND"]
  12 -> 25 [style=solid label="RSHIFT"]
  12 -> 26 [style=solid label="LSHIFT"]
  12 -> 27 [style=solid label="MINUS"]
  12 -> 28 [style=solid label="PLUS"]
  12 -> 29 [style=solid label="MOD"]
  12 -> 30 [style=solid label="DIV"]
  12 -> 31 [style=solid label="MUL"]
  12 -> 32 [style=solid label="POW"]
  12 -> 33 [style=solid label="FACTORIAL"]
  13 [label="13\nassignment_expression -> left_opside_funct_expression . constant_expression"]
  13 -> 17 [style=solid label="IDENTIFIER"]
  13 -> 2 [style=solid label="HEX"]
  13 -> 3 [style=solid label="BIN"]
  13 -> 4 [style=solid label="OCT"]
  13 -> 5 [style=solid label="SCI"]
  13 -> 6 [style=solid label="FLOAT"]
  13 -> 7 [style=solid label="INT"]
  13 -> 8 [style=solid label="LPAREN"]
  13 -> 9 [style=solid label="NOT"]
  13 -> 11 [style=dashed label="atomic_value"]
  13 -> 34 [style=dashed label="constant_expression"]
  14 [label="14\nexpression -> assignment_expression ."]
  15 [label="15\nassignment_expression -> IDENTIFIER EQUAL . constant_expression"]
  15 -> 17 [style=solid label="IDENTIFIER"]
  15 -> 2 [style=solid label="HEX"]
  15 -> 3 [style=solid label="BIN"]
  15 -> 4 [style=solid label="OCT"]
  15 -> 5 [style=solid label="SCI"]
  15 -> 6 [style=solid label="FLOAT"]
  15 -> 7 [style=solid label="INT"]
  15 -> 8 [style=solid label="LPAREN"]
  15 -> 9 [style=solid label="NOT"]
  15 -> 11 [style=dashed label="atomic_value"]
  15 -> 35 [style=dashed label="constant_expression"]
  16 [label="16\nconstant_expression -> IDENTIFIER LPAREN . RPAREN\nconstant_expression -> IDENTIFIER LPAREN . constant_expression RPAREN\nconstant_expression -> IDENTIFIER LPAREN . expression_list RPAREN\nleft_opside_funct_expression -> IDENTIFIER LPAREN . RPAREN EQUAL\nleft_opside_funct_expression -> IDENTIFIER LPAREN . IDENTIFIER RPAREN EQUAL\nleft_opside_funct_expression -> IDENTIFIER LPAREN . identifier_list RPAREN EQUAL"]
  16 -> 36 [style=solid label="IDENTIFIER"]
  16 -> 2 [style=solid label="HEX"]
  16 -> 3 [style=solid label="BIN"]
  16 -> 4 [style=solid label="OCT"]
  16 -> 5 [style=solid label="SCI"]
  16 -> 6 [style=solid label="FLOAT"]
  16 -> 7 [style=solid label="INT"]
  16 -> 8 [style=solid label="LPAREN"]
  16 -> 37 [style=solid label="RPAREN"]
  16 -> 9 [style=solid label="NOT"]
  16 -> 11 [style=dashed label="atomic_value"]
  16 -> 38 [style=dashed label="constant_expression"]
  16 -> 39 [style=dashed label="expression_list"]
  16 -> 40 [style=dashed label="identifier_list"]
  17 [label="17\natomic_value -> IDENTIFIER .\nconstant_expression -> IDENTIFIER . LPAREN RPAREN\nconstant_expression -> IDENTIFIER . LPAREN constant_expression RPAREN\nconstant_expression -> IDENTIFIER . LPAREN expression_list RPAREN"]
  17 -> 41 [style=solid label="LPAREN"]
  18 [label="18\nconstant_expression -> LPAREN constant_expression . RPAREN\nconstant_expression -> constant_expression . OR constant_expression\nconstant_expression -> constant_expression . XOR constant_expression\nconstant_expression -> constant_expression . AND constant_expression\nconstant_expression -> constant_expression . LSHIFT constant_expression\nconstant_expression -> constant_expression . RSHIFT constant_expression\nconstant_expression -> constant_expression . PLUS constant_expression\nconstant_expression -> constant_expression . MINUS constant_expression\nconstant_expression -> constant_expression . MUL constant_expression\nconstant_expression -> constant_expression . DIV constant_expression\nconstant_expression -> constant_expression . MOD constant_expression\nconstant_expression -> constant_expression . POW constant_expression\nconstant_expression -> constant_expression . FACTORIAL"]
  18 -> 42 [style=solid label="RPAREN"]
  18 -> 22 [style=solid label="OR"]
  18 -> 23 [style=solid label="XOR"]
  18 -> 24 [style=solid label="AND"]
  18 -> 25 [style=solid label="RSHIFT"]
  18 -> 26 [style=solid label="LSHIFT"]
  18 -> 27 [style=solid label="MINUS"]
  18 -> 28 [style=solid label="PLUS"]
  18 -> 29 [style=solid label="MOD"]
  18 -> 30 [style=solid label="DIV"]
  18 -> 31 [style=solid label="MUL"]
  18 -> 32 [style=solid label="POW"]
  18 -> 33 [style=solid label="FACTORIAL"]
  19 [label="19\nconstant_expression -> constant_expression . OR constant_expression\nconstant_expression -> constant_expression . XOR constant_expression\nconstant_expression -> constant_expression . AND constant_expression\nconstant_expression -> constant_expression . LSHIFT constant_expression\nconstant_expression -> constant_expression . RSHIFT constant_expression\nconstant_expression -> constant_expression . PLUS constant_expression\nconstant_expression -> constant_expression . MINUS constant_expression\nconstant_expression -> constant_expression . MUL constant_expression\nconstant_expression -> constant_expression . DIV constant_expression\nconstant_expression -> constant_expression . MOD constant_expression\nconstant_expression -> constant_expression . POW constant_expression\nconstant_expression -> constant_expression . FACTORIAL\nconstant_expression -> NOT constant_expression ."]
  20 [label="20\n$accept -> expression \"end of expression\" ."]
  21 [label="21\nexpression -> expression DECORATOR . IDENTIFIER"]
  21 -> 43 [style=solid label="IDENTIFIER"]
  22 [label="22\nconstant_expression -> constant_expression OR . constant_expression"]
  22 -> 17 [style=solid label="IDENTIFIER"]
  22 -> 2 [style=solid label="HEX"]
  22 -> 3 [style=solid label="BIN"]
  22 -> 4 [style=solid label="OCT"]
  22 -> 5 [style=solid label="SCI"]
  22 -> 6 [style=solid label="FLOAT"]
  22 -> 7 [style=solid label="INT"]
  22 -> 8 [style=solid label="LPAREN"]
  22 -> 9 [style=solid label="NOT"]
  22 -> 11 [style=dashed label="atomic_value"]
  22 -> 44 [style=dashed label="constant_expression"]
  23 [label="23\nconstant_expression -> constant_expression XOR . constant_expression"]
  23 -> 17 [style=solid label="IDENTIFIER"]
  23 -> 2 [style=solid label="HEX"]
  23 -> 3 [style=solid label="BIN"]
  23 -> 4 [style=solid label="OCT"]
  23 -> 5 [style=solid label="SCI"]
  23 -> 6 [style=solid label="FLOAT"]
  23 -> 7 [style=solid label="INT"]
  23 -> 8 [style=solid label="LPAREN"]
  23 -> 9 [style=solid label="NOT"]
  23 -> 11 [style=dashed label="atomic_value"]
  23 -> 45 [style=dashed label="constant_expression"]
  24 [label="24\nconstant_expression -> constant_expression AND . constant_expression"]
  24 -> 17 [style=solid label="IDENTIFIER"]
  24 -> 2 [style=solid label="HEX"]
  24 -> 3 [style=solid label="BIN"]
  24 -> 4 [style=solid label="OCT"]
  24 -> 5 [style=solid label="SCI"]
  24 -> 6 [style=solid label="FLOAT"]
  24 -> 7 [style=solid label="INT"]
  24 -> 8 [style=solid label="LPAREN"]
  24 -> 9 [style=solid label="NOT"]
  24 -> 11 [style=dashed label="atomic_value"]
  24 -> 46 [style=dashed label="constant_expression"]
  25 [label="25\nconstant_expression -> constant_expression RSHIFT . constant_expression"]
  25 -> 17 [style=solid label="IDENTIFIER"]
  25 -> 2 [style=solid label="HEX"]
  25 -> 3 [style=solid label="BIN"]
  25 -> 4 [style=solid label="OCT"]
  25 -> 5 [style=solid label="SCI"]
  25 -> 6 [style=solid label="FLOAT"]
  25 -> 7 [style=solid label="INT"]
  25 -> 8 [style=solid label="LPAREN"]
  25 -> 9 [style=solid label="NOT"]
  25 -> 11 [style=dashed label="atomic_value"]
  25 -> 47 [style=dashed label="constant_expression"]
  26 [label="26\nconstant_expression -> constant_expression LSHIFT . constant_expression"]
  26 -> 17 [style=solid label="IDENTIFIER"]
  26 -> 2 [style=solid label="HEX"]
  26 -> 3 [style=solid label="BIN"]
  26 -> 4 [style=solid label="OCT"]
  26 -> 5 [style=solid label="SCI"]
  26 -> 6 [style=solid label="FLOAT"]
  26 -> 7 [style=solid label="INT"]
  26 -> 8 [style=solid label="LPAREN"]
  26 -> 9 [style=solid label="NOT"]
  26 -> 11 [style=dashed label="atomic_value"]
  26 -> 48 [style=dashed label="constant_expression"]
  27 [label="27\nconstant_expression -> constant_expression MINUS . constant_expression"]
  27 -> 17 [style=solid label="IDENTIFIER"]
  27 -> 2 [style=solid label="HEX"]
  27 -> 3 [style=solid label="BIN"]
  27 -> 4 [style=solid label="OCT"]
  27 -> 5 [style=solid label="SCI"]
  27 -> 6 [style=solid label="FLOAT"]
  27 -> 7 [style=solid label="INT"]
  27 -> 8 [style=solid label="LPAREN"]
  27 -> 9 [style=solid label="NOT"]
  27 -> 11 [style=dashed label="atomic_value"]
  27 -> 49 [style=dashed label="constant_expression"]
  28 [label="28\nconstant_expression -> constant_expression PLUS . constant_expression"]
  28 -> 17 [style=solid label="IDENTIFIER"]
  28 -> 2 [style=solid label="HEX"]
  28 -> 3 [style=solid label="BIN"]
  28 -> 4 [style=solid label="OCT"]
  28 -> 5 [style=solid label="SCI"]
  28 -> 6 [style=solid label="FLOAT"]
  28 -> 7 [style=solid label="INT"]
  28 -> 8 [style=solid label="LPAREN"]
  28 -> 9 [style=solid label="NOT"]
  28 -> 11 [style=dashed label="atomic_value"]
  28 -> 50 [style=dashed label="constant_expression"]
  29 [label="29\nconstant_expression -> constant_expression MOD . constant_expression"]
  29 -> 17 [style=solid label="IDENTIFIER"]
  29 -> 2 [style=solid label="HEX"]
  29 -> 3 [style=solid label="BIN"]
  29 -> 4 [style=solid label="OCT"]
  29 -> 5 [style=solid label="SCI"]
  29 -> 6 [style=solid label="FLOAT"]
  29 -> 7 [style=solid label="INT"]
  29 -> 8 [style=solid label="LPAREN"]
  29 -> 9 [style=solid label="NOT"]
  29 -> 11 [style=dashed label="atomic_value"]
  29 -> 51 [style=dashed label="constant_expression"]
  30 [label="30\nconstant_expression -> constant_expression DIV . constant_expression"]
  30 -> 17 [style=solid label="IDENTIFIER"]
  30 -> 2 [style=solid label="HEX"]
  30 -> 3 [style=solid label="BIN"]
  30 -> 4 [style=solid label="OCT"]
  30 -> 5 [style=solid label="SCI"]
  30 -> 6 [style=solid label="FLOAT"]
  30 -> 7 [style=solid label="INT"]
  30 -> 8 [style=solid label="LPAREN"]
  30 -> 9 [style=solid label="NOT"]
  30 -> 11 [style=dashed label="atomic_value"]
  30 -> 52 [style=dashed label="constant_expression"]
  31 [label="31\nconstant_expression -> constant_expression MUL . constant_expression"]
  31 -> 17 [style=solid label="IDENTIFIER"]
  31 -> 2 [style=solid label="HEX"]
  31 -> 3 [style=solid label="BIN"]
  31 -> 4 [style=solid label="OCT"]
  31 -> 5 [style=solid label="SCI"]
  31 -> 6 [style=solid label="FLOAT"]
  31 -> 7 [style=solid label="INT"]
  31 -> 8 [style=solid label="LPAREN"]
  31 -> 9 [style=solid label="NOT"]
  31 -> 11 [style=dashed label="atomic_value"]
  31 -> 53 [style=dashed label="constant_expression"]
  32 [label="32\nconstant_expression -> constant_expression POW . constant_expression"]
  32 -> 17 [style=solid label="IDENTIFIER"]
  32 -> 2 [style=solid label="HEX"]
  32 -> 3 [style=solid label="BIN"]
  32 -> 4 [style=solid label="OCT"]
  32 -> 5 [style=solid label="SCI"]
  32 -> 6 [style=solid label="FLOAT"]
  32 -> 7 [style=solid label="INT"]
  32 -> 8 [style=solid label="LPAREN"]
  32 -> 9 [style=solid label="NOT"]
  32 -> 11 [style=dashed label="atomic_value"]
  32 -> 54 [style=dashed label="constant_expression"]
  33 [label="33\nconstant_expression -> constant_expression FACTORIAL ."]
  34 [label="34\nconstant_expression -> constant_expression . OR constant_expression\nconstant_expression -> constant_expression . XOR constant_expression\nconstant_expression -> constant_expression . AND constant_expression\nconstant_expression -> constant_expression . LSHIFT constant_expression\nconstant_expression -> constant_expression . RSHIFT constant_expression\nconstant_expression -> constant_expression . PLUS constant_expression\nconstant_expression -> constant_expression . MINUS constant_expression\nconstant_expression -> constant_expression . MUL constant_expression\nconstant_expression -> constant_expression . DIV constant_expression\nconstant_expression -> constant_expression . MOD constant_expression\nconstant_expression -> constant_expression . POW constant_expression\nconstant_expression -> constant_expression . FACTORIAL\nassignment_expression -> left_opside_funct_expression constant_expression ."]
  34 -> 22 [style=solid label="OR"]
  34 -> 23 [style=solid label="XOR"]
  34 -> 24 [style=solid label="AND"]
  34 -> 25 [style=solid label="RSHIFT"]
  34 -> 26 [style=solid label="LSHIFT"]
  34 -> 27 [style=solid label="MINUS"]
  34 -> 28 [style=solid label="PLUS"]
  34 -> 29 [style=solid label="MOD"]
  34 -> 30 [style=solid label="DIV"]
  34 -> 31 [style=solid label="MUL"]
  34 -> 32 [style=solid label="POW"]
  34 -> 33 [style=solid label="FACTORIAL"]
  35 [label="35\nconstant_expression -> constant_expression . OR constant_expression\nconstant_expression -> constant_expression . XOR constant_expression\nconstant_expression -> constant_expression . AND constant_expression\nconstant_expression -> constant_expression . LSHIFT constant_expression\nconstant_expression -> constant_expression . RSHIFT constant_expression\nconstant_expression -> constant_expression . PLUS constant_expression\nconstant_expression -> constant_expression . MINUS constant_expression\nconstant_expression -> constant_expression . MUL constant_expression\nconstant_expression -> constant_expression . DIV constant_expression\nconstant_expression -> constant_expression . MOD constant_expression\nconstant_expression -> constant_expression . POW constant_expression\nconstant_expression -> constant_expression . FACTORIAL\nassignment_expression -> IDENTIFIER EQUAL constant_expression ."]
  35 -> 22 [style=solid label="OR"]
  35 -> 23 [style=solid label="XOR"]
  35 -> 24 [style=solid label="AND"]
  35 -> 25 [style=solid label="RSHIFT"]
  35 -> 26 [style=solid label="LSHIFT"]
  35 -> 27 [style=solid label="MINUS"]
  35 -> 28 [style=solid label="PLUS"]
  35 -> 29 [style=solid label="MOD"]
  35 -> 30 [style=solid label="DIV"]
  35 -> 31 [style=solid label="MUL"]
  35 -> 32 [style=solid label="POW"]
  35 -> 33 [style=solid label="FACTORIAL"]
  36 [label="36\natomic_value -> IDENTIFIER .\nconstant_expression -> IDENTIFIER . LPAREN RPAREN\nconstant_expression -> IDENTIFIER . LPAREN constant_expression RPAREN\nconstant_expression -> IDENTIFIER . LPAREN expression_list RPAREN\nleft_opside_funct_expression -> IDENTIFIER LPAREN IDENTIFIER . RPAREN EQUAL\nidentifier_list -> IDENTIFIER . COMMA IDENTIFIER"]
  36 -> 41 [style=solid label="LPAREN"]
  36 -> 55 [style=solid label="RPAREN"]
  36 -> 56 [style=solid label="COMMA"]
  37 [label="37\nconstant_expression -> IDENTIFIER LPAREN RPAREN .\nleft_opside_funct_expression -> IDENTIFIER LPAREN RPAREN . EQUAL"]
  37 -> 57 [style=solid label="EQUAL"]
  38 [label="38\nconstant_expression -> constant_expression . OR constant_expression\nconstant_expression -> constant_expression . XOR constant_expression\nconstant_expression -> constant_expression . AND constant_expression\nconstant_expression -> constant_expression . LSHIFT constant_expression\nconstant_expression -> constant_expression . RSHIFT constant_expression\nconstant_expression -> constant_expression . PLUS constant_expression\nconstant_expression -> constant_expression . MINUS constant_expression\nconstant_expression -> constant_expression . MUL constant_expression\nconstant_expression -> constant_expression . DIV constant_expression\nconstant_expression -> constant_expression . MOD constant_expression\nconstant_expression -> constant_expression . POW constant_expression\nconstant_expression -> constant_expression . FACTORIAL\nconstant_expression -> IDENTIFIER LPAREN constant_expression . RPAREN\nexpression_list -> constant_expression . COMMA constant_expression"]
  38 -> 58 [style=solid label="RPAREN"]
  38 -> 59 [style=solid label="COMMA"]
  38 -> 22 [style=solid label="OR"]
  38 -> 23 [style=solid label="XOR"]
  38 -> 24 [style=solid label="AND"]
  38 -> 25 [style=solid label="RSHIFT"]
  38 -> 26 [style=solid label="LSHIFT"]
  38 -> 27 [style=solid label="MINUS"]
  38 -> 28 [style=solid label="PLUS"]
  38 -> 29 [style=solid label="MOD"]
  38 -> 30 [style=solid label="DIV"]
  38 -> 31 [style=solid label="MUL"]
  38 -> 32 [style=solid label="POW"]
  38 -> 33 [style=solid label="FACTORIAL"]
  39 [label="39\nconstant_expression -> IDENTIFIER LPAREN expression_list . RPAREN\nexpression_list -> expression_list . COMMA constant_expression"]
  39 -> 60 [style=solid label="RPAREN"]
  39 -> 61 [style=solid label="COMMA"]
  40 [label="40\nleft_opside_funct_expression -> IDENTIFIER LPAREN identifier_list . RPAREN EQUAL\nidentifier_list -> identifier_list . COMMA IDENTIFIER"]
  40 -> 62 [style=solid label="RPAREN"]
  40 -> 63 [style=solid label="COMMA"]
  41 [label="41\nconstant_expression -> IDENTIFIER LPAREN . RPAREN\nconstant_expression -> IDENTIFIER LPAREN . constant_expression RPAREN\nconstant_expression -> IDENTIFIER LPAREN . expression_list RPAREN"]
  41 -> 17 [style=solid label="IDENTIFIER"]
  41 -> 2 [style=solid label="HEX"]
  41 -> 3 [style=solid label="BIN"]
  41 -> 4 [style=solid label="OCT"]
  41 -> 5 [style=solid label="SCI"]
  41 -> 6 [style=solid label="FLOAT"]
  41 -> 7 [style=solid label="INT"]
  41 -> 8 [style=solid label="LPAREN"]
  41 -> 64 [style=solid label="RPAREN"]
  41 -> 9 [style=solid label="NOT"]
  41 -> 11 [style=dashed label="atomic_value"]
  41 -> 38 [style=dashed label="constant_expression"]
  41 -> 39 [style=dashed label="expression_list"]
  42 [label="42\nconstant_expression -> LPAREN constant_expression RPAREN ."]
  43 [label="43\nexpression -> expression DECORATOR IDENTIFIER ."]
  44 [label="44\nconstant_expression -> constant_expression . OR constant_expression\nconstant_expression -> constant_expression OR constant_expression .\nconstant_expression -> constant_expression . XOR constant_expression\nconstant_expression -> constant_expression . AND constant_expression\nconstant_expression -> constant_expression . LSHIFT constant_expression\nconstant_expression -> constant_expression . RSHIFT constant_expression\nconstant_expression -> constant_expression . PLUS constant_expression\nconstant_expression -> constant_expression . MINUS constant_expression\nconstant_expression -> constant_expression . MUL constant_expression\nconstant_expression -> constant_expression . DIV constant_expression\nconstant_expression -> constant_expression . MOD constant_expression\nconstant_expression -> constant_expression . POW constant_expression\nconstant_expression -> constant_expression . FACTORIAL"]
  44 -> 23 [style=solid label="XOR"]
  44 -> 24 [style=solid label="AND"]
  44 -> 25 [style=solid label="RSHIFT"]
  44 -> 26 [style=solid label="LSHIFT"]
  44 -> 27 [style=solid label="MINUS"]
  44 -> 28 [style=solid label="PLUS"]
  44 -> 29 [style=solid label="MOD"]
  44 -> 30 [style=solid label="DIV"]
  44 -> 31 [style=solid label="MUL"]
  44 -> 32 [style=solid label="POW"]
  44 -> 33 [style=solid label="FACTORIAL"]
  45 [label="45\nconstant_expression -> constant_expression . OR constant_expression\nconstant_expression -> constant_expression . XOR constant_expression\nconstant_expression -> constant_expression XOR constant_expression .\nconstant_expression -> constant_expression . AND constant_expression\nconstant_expression -> constant_expression . LSHIFT constant_expression\nconstant_expression -> constant_expression . RSHIFT constant_expression\nconstant_expression -> constant_expression . PLUS constant_expression\nconstant_expression -> constant_expression . MINUS constant_expression\nconstant_expression -> constant_expression . MUL constant_expression\nconstant_expression -> constant_expression . DIV constant_expression\nconstant_expression -> constant_expression . MOD constant_expression\nconstant_expression -> constant_expression . POW constant_expression\nconstant_expression -> constant_expression . FACTORIAL"]
  45 -> 24 [style=solid label="AND"]
  45 -> 25 [style=solid label="RSHIFT"]
  45 -> 26 [style=solid label="LSHIFT"]
  45 -> 27 [style=solid label="MINUS"]
  45 -> 28 [style=solid label="PLUS"]
  45 -> 29 [style=solid label="MOD"]
  45 -> 30 [style=solid label="DIV"]
  45 -> 31 [style=solid label="MUL"]
  45 -> 32 [style=solid label="POW"]
  45 -> 33 [style=solid label="FACTORIAL"]
  46 [label="46\nconstant_expression -> constant_expression . OR constant_expression\nconstant_expression -> constant_expression . XOR constant_expression\nconstant_expression -> constant_expression . AND constant_expression\nconstant_expression -> constant_expression AND constant_expression .\nconstant_expression -> constant_expression . LSHIFT constant_expression\nconstant_expression -> constant_expression . RSHIFT constant_expression\nconstant_expression -> constant_expression . PLUS constant_expression\nconstant_expression -> constant_expression . MINUS constant_expression\nconstant_expression -> constant_expression . MUL constant_expression\nconstant_expression -> constant_expression . DIV constant_expression\nconstant_expression -> constant_expression . MOD constant_expression\nconstant_expression -> constant_expression . POW constant_expression\nconstant_expression -> constant_expression . FACTORIAL"]
  46 -> 25 [style=solid label="RSHIFT"]
  46 -> 26 [style=solid label="LSHIFT"]
  46 -> 27 [style=solid label="MINUS"]
  46 -> 28 [style=solid label="PLUS"]
  46 -> 29 [style=solid label="MOD"]
  46 -> 30 [style=solid label="DIV"]
  46 -> 31 [style=solid label="MUL"]
  46 -> 32 [style=solid label="POW"]
  46 -> 33 [style=solid label="FACTORIAL"]
  47 [label="47\nconstant_expression -> constant_expression . OR constant_expression\nconstant_expression -> constant_expression . XOR constant_expression\nconstant_expression -> constant_expression . AND constant_expression\nconstant_expression -> constant_expression . LSHIFT constant_expression\nconstant_expression -> constant_expression . RSHIFT constant_expression\nconstant_expression -> constant_expression RSHIFT constant_expression .\nconstant_expression -> constant_expression . PLUS constant_expression\nconstant_expression -> constant_expression . MINUS constant_expression\nconstant_expression -> constant_expression . MUL constant_expression\nconstant_expression -> constant_expression . DIV constant_expression\nconstant_expression -> constant_expression . MOD constant_expression\nconstant_expression -> constant_expression . POW constant_expression\nconstant_expression -> constant_expression . FACTORIAL"]
  47 -> 27 [style=solid label="MINUS"]
  47 -> 28 [style=solid label="PLUS"]
  47 -> 29 [style=solid label="MOD"]
  47 -> 30 [style=solid label="DIV"]
  47 -> 31 [style=solid label="MUL"]
  47 -> 32 [style=solid label="POW"]
  47 -> 33 [style=solid label="FACTORIAL"]
  48 [label="48\nconstant_expression -> constant_expression . OR constant_expression\nconstant_expression -> constant_expression . XOR constant_expression\nconstant_expression -> constant_expression . AND constant_expression\nconstant_expression -> constant_expression . LSHIFT constant_expression\nconstant_expression -> constant_expression LSHIFT constant_expression .\nconstant_expression -> constant_expression . RSHIFT constant_expression\nconstant_expression -> constant_expression . PLUS constant_expression\nconstant_expression -> constant_expression . MINUS constant_expression\nconstant_expression -> constant_expression . MUL constant_expression\nconstant_expression -> constant_expression . DIV constant_expression\nconstant_expression -> constant_expression . MOD constant_expression\nconstant_expression -> constant_expression . POW constant_expression\nconstant_expression -> constant_expression . FACTORIAL"]
  48 -> 27 [style=solid label="MINUS"]
  48 -> 28 [style=solid label="PLUS"]
  48 -> 29 [style=solid label="MOD"]
  48 -> 30 [style=solid label="DIV"]
  48 -> 31 [style=solid label="MUL"]
  48 -> 32 [style=solid label="POW"]
  48 -> 33 [style=solid label="FACTORIAL"]
  49 [label="49\nconstant_expression -> constant_expression . OR constant_expression\nconstant_expression -> constant_expression . XOR constant_expression\nconstant_expression -> constant_expression . AND constant_expression\nconstant_expression -> constant_expression . LSHIFT constant_expression\nconstant_expression -> constant_expression . RSHIFT constant_expression\nconstant_expression -> constant_expression . PLUS constant_expression\nconstant_expression -> constant_expression . MINUS constant_expression\nconstant_expression -> constant_expression MINUS constant_expression .\nconstant_expression -> constant_expression . MUL constant_expression\nconstant_expression -> constant_expression . DIV constant_expression\nconstant_expression -> constant_expression . MOD constant_expression\nconstant_expression -> constant_expression . POW constant_expression\nconstant_expression -> constant_expression . FACTORIAL"]
  49 -> 29 [style=solid label="MOD"]
  49 -> 30 [style=solid label="DIV"]
  49 -> 31 [style=solid label="MUL"]
  49 -> 32 [style=solid label="POW"]
  49 -> 33 [style=solid label="FACTORIAL"]
  50 [label="50\nconstant_expression -> constant_expression . OR constant_expression\nconstant_expression -> constant_expression . XOR constant_expression\nconstant_expression -> constant_expression . AND constant_expression\nconstant_expression -> constant_expression . LSHIFT constant_expression\nconstant_expression -> constant_expression . RSHIFT constant_expression\nconstant_expression -> constant_expression . PLUS constant_expression\nconstant_expression -> constant_expression PLUS constant_expression .\nconstant_expression -> constant_expression . MINUS constant_expression\nconstant_expression -> constant_expression . MUL constant_expression\nconstant_expression -> constant_expression . DIV constant_expression\nconstant_expression -> constant_expression . MOD constant_expression\nconstant_expression -> constant_expression . POW constant_expression\nconstant_expression -> constant_expression . FACTORIAL"]
  50 -> 29 [style=solid label="MOD"]
  50 -> 30 [style=solid label="DIV"]
  50 -> 31 [style=solid label="MUL"]
  50 -> 32 [style=solid label="POW"]
  50 -> 33 [style=solid label="FACTORIAL"]
  51 [label="51\nconstant_expression -> constant_expression . OR constant_expression\nconstant_expression -> constant_expression . XOR constant_expression\nconstant_expression -> constant_expression . AND constant_expression\nconstant_expression -> constant_expression . LSHIFT constant_expression\nconstant_expression -> constant_expression . RSHIFT constant_expression\nconstant_expression -> constant_expression . PLUS constant_expression\nconstant_expression -> constant_expression . MINUS constant_expression\nconstant_expression -> constant_expression . MUL constant_expression\nconstant_expression -> constant_expression . DIV constant_expression\nconstant_expression -> constant_expression . MOD constant_expression\nconstant_expression -> constant_expression MOD constant_expression .\nconstant_expression -> constant_expression . POW constant_expression\nconstant_expression -> constant_expression . FACTORIAL"]
  51 -> 32 [style=solid label="POW"]
  51 -> 33 [style=solid label="FACTORIAL"]
  52 [label="52\nconstant_expression -> constant_expression . OR constant_expression\nconstant_expression -> constant_expression . XOR constant_expression\nconstant_expression -> constant_expression . AND constant_expression\nconstant_expression -> constant_expression . LSHIFT constant_expression\nconstant_expression -> constant_expression . RSHIFT constant_expression\nconstant_expression -> constant_expression . PLUS constant_expression\nconstant_expression -> constant_expression . MINUS constant_expression\nconstant_expression -> constant_expression . MUL constant_expression\nconstant_expression -> constant_expression . DIV constant_expression\nconstant_expression -> constant_expression DIV constant_expression .\nconstant_expression -> constant_expression . MOD constant_expression\nconstant_expression -> constant_expression . POW constant_expression\nconstant_expression -> constant_expression . FACTORIAL"]
  52 -> 32 [style=solid label="POW"]
  52 -> 33 [style=solid label="FACTORIAL"]
  53 [label="53\nconstant_expression -> constant_expression . OR constant_expression\nconstant_expression -> constant_expression . XOR constant_expression\nconstant_expression -> constant_expression . AND constant_expression\nconstant_expression -> constant_expression . LSHIFT constant_expression\nconstant_expression -> constant_expression . RSHIFT constant_expression\nconstant_expression -> constant_expression . PLUS constant_expression\nconstant_expression -> constant_expression . MINUS constant_expression\nconstant_expression -> constant_expression . MUL constant_expression\nconstant_expression -> constant_expression MUL constant_expression .\nconstant_expression -> constant_expression . DIV constant_expression\nconstant_expression -> constant_expression . MOD constant_expression\nconstant_expression -> constant_expression . POW constant_expression\nconstant_expression -> constant_expression . FACTORIAL"]
  53 -> 32 [style=solid label="POW"]
  53 -> 33 [style=solid label="FACTORIAL"]
  54 [label="54\nconstant_expression -> constant_expression . OR constant_expression\nconstant_expression -> constant_expression . XOR constant_expression\nconstant_expression -> constant_expression . AND constant_expression\nconstant_expression -> constant_expression . LSHIFT constant_expression\nconstant_expression -> constant_expression . RSHIFT constant_expression\nconstant_expression -> constant_expression . PLUS constant_expression\nconstant_expression -> constant_expression . MINUS constant_expression\nconstant_expression -> constant_expression . MUL constant_expression\nconstant_expression -> constant_expression . DIV constant_expression\nconstant_expression -> constant_expression . MOD constant_expression\nconstant_expression -> constant_expression . POW constant_expression\nconstant_expression -> constant_expression POW constant_expression .\nconstant_expression -> constant_expression . FACTORIAL"]
  54 -> 33 [style=solid label="FACTORIAL"]
  55 [label="55\nleft_opside_funct_expression -> IDENTIFIER LPAREN IDENTIFIER RPAREN . EQUAL"]
  55 -> 65 [style=solid label="EQUAL"]
  56 [label="56\nidentifier_list -> IDENTIFIER COMMA . IDENTIFIER"]
  56 -> 66 [style=solid label="IDENTIFIER"]
  57 [label="57\nleft_opside_funct_expression -> IDENTIFIER LPAREN RPAREN EQUAL ."]
  58 [label="58\nconstant_expression -> IDENTIFIER LPAREN constant_expression RPAREN ."]
  59 [label="59\nexpression_list -> constant_expression COMMA . constant_expression"]
  59 -> 17 [style=solid label="IDENTIFIER"]
  59 -> 2 [style=solid label="HEX"]
  59 -> 3 [style=solid label="BIN"]
  59 -> 4 [style=solid label="OCT"]
  59 -> 5 [style=solid label="SCI"]
  59 -> 6 [style=solid label="FLOAT"]
  59 -> 7 [style=solid label="INT"]
  59 -> 8 [style=solid label="LPAREN"]
  59 -> 9 [style=solid label="NOT"]
  59 -> 11 [style=dashed label="atomic_value"]
  59 -> 67 [style=dashed label="constant_expression"]
  60 [label="60\nconstant_expression -> IDENTIFIER LPAREN expression_list RPAREN ."]
  61 [label="61\nexpression_list -> expression_list COMMA . constant_expression"]
  61 -> 17 [style=solid label="IDENTIFIER"]
  61 -> 2 [style=solid label="HEX"]
  61 -> 3 [style=solid label="BIN"]
  61 -> 4 [style=solid label="OCT"]
  61 -> 5 [style=solid label="SCI"]
  61 -> 6 [style=solid label="FLOAT"]
  61 -> 7 [style=solid label="INT"]
  61 -> 8 [style=solid label="LPAREN"]
  61 -> 9 [style=solid label="NOT"]
  61 -> 11 [style=dashed label="atomic_value"]
  61 -> 68 [style=dashed label="constant_expression"]
  62 [label="62\nleft_opside_funct_expression -> IDENTIFIER LPAREN identifier_list RPAREN . EQUAL"]
  62 -> 69 [style=solid label="EQUAL"]
  63 [label="63\nidentifier_list -> identifier_list COMMA . IDENTIFIER"]
  63 -> 70 [style=solid label="IDENTIFIER"]
  64 [label="64\nconstant_expression -> IDENTIFIER LPAREN RPAREN ."]
  65 [label="65\nleft_opside_funct_expression -> IDENTIFIER LPAREN IDENTIFIER RPAREN EQUAL ."]
  66 [label="66\nidentifier_list -> IDENTIFIER COMMA IDENTIFIER ."]
  67 [label="67\nconstant_expression -> constant_expression . OR constant_expression\nconstant_expression -> constant_expression . XOR constant_expression\nconstant_expression -> constant_expression . AND constant_expression\nconstant_expression -> constant_expression . LSHIFT constant_expression\nconstant_expression -> constant_expression . RSHIFT constant_expression\nconstant_expression -> constant_expression . PLUS constant_expression\nconstant_expression -> constant_expression . MINUS constant_expression\nconstant_expression -> constant_expression . MUL constant_expression\nconstant_expression -> constant_expression . DIV constant_expression\nconstant_expression -> constant_expression . MOD constant_expression\nconstant_expression -> constant_expression . POW constant_expression\nconstant_expression -> constant_expression . FACTORIAL\nexpression_list -> constant_expression COMMA constant_expression ."]
  67 -> 22 [style=solid label="OR"]
  67 -> 23 [style=solid label="XOR"]
  67 -> 24 [style=solid label="AND"]
  67 -> 25 [style=solid label="RSHIFT"]
  67 -> 26 [style=solid label="LSHIFT"]
  67 -> 27 [style=solid label="MINUS"]
  67 -> 28 [style=solid label="PLUS"]
  67 -> 29 [style=solid label="MOD"]
  67 -> 30 [style=solid label="DIV"]
  67 -> 31 [style=solid label="MUL"]
  67 -> 32 [style=solid label="POW"]
  67 -> 33 [style=solid label="FACTORIAL"]
  68 [label="68\nconstant_expression -> constant_expression . OR constant_expression\nconstant_expression -> constant_expression . XOR constant_expression\nconstant_expression -> constant_expression . AND constant_expression\nconstant_expression -> constant_expression . LSHIFT constant_expression\nconstant_expression -> constant_expression . RSHIFT constant_expression\nconstant_expression -> constant_expression . PLUS constant_expression\nconstant_expression -> constant_expression . MINUS constant_expression\nconstant_expression -> constant_expression . MUL constant_expression\nconstant_expression -> constant_expression . DIV constant_expression\nconstant_expression -> constant_expression . MOD constant_expression\nconstant_expression -> constant_expression . POW constant_expression\nconstant_expression -> constant_expression . FACTORIAL\nexpression_list -> expression_list COMMA constant_expression ."]
  68 -> 22 [style=solid label="OR"]
  68 -> 23 [style=solid label="XOR"]
  68 -> 24 [style=solid label="AND"]
  68 -> 25 [style=solid label="RSHIFT"]
  68 -> 26 [style=solid label="LSHIFT"]
  68 -> 27 [style=solid label="MINUS"]
  68 -> 28 [style=solid label="PLUS"]
  68 -> 29 [style=solid label="MOD"]
  68 -> 30 [style=solid label="DIV"]
  68 -> 31 [style=solid label="MUL"]
  68 -> 32 [style=solid label="POW"]
  68 -> 33 [style=solid label="FACTORIAL"]
  69 [label="69\nleft_opside_funct_expression -> IDENTIFIER LPAREN identifier_list RPAREN EQUAL ."]
  70 [label="70\nidentifier_list -> identifier_list COMMA IDENTIFIER ."]
}
